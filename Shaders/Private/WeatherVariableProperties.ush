extern int1 gridX = 10;
extern int1 gridY = 10;
extern int1 gridZ = 56;
extern int1 gridSizeI = 1000;
extern int1 gridSizeJ = 1000;


extern float1 dT = 0;
extern float1 simulationTime = 0;

struct FStruct_AirCellColumns_GPU
{
    float1 U; // u: wind component in the X direction
    float1 V; // v: wind component in the Y direction
    float1 W; // w: wind component in the Z direction
    float1 THETA; // Theta: Potential temperature
    float1 Pi; // Pi: Exener function
    float1 RO; // RO: Density (Temp)
    float1 QV; // qv: Vapor mixing ratio
    float1 QC; // qc: Condensation mixing ratio
    float1 QR; // qr: Rain mixing ratio
    float1 VORT; // Vort: Vorticity
};

struct FStruct_GroundCellColumns_GPU
{
    float1 GR_TG; // Tg: Temperature of ground of first ds centimeters
    float1 GR_TA; // Ta: Temperature of air above ground z>0
    float1 GR_ALBEDO; // a: Albedo of the gridcell (heat absorbtion)
    float1 GR_CGA; // Soild-heat capacity per area of the gridcell

    float1 GR_TG_RESET; // Variables to reset after 24h
    float1 GR_TA_RESET;
    float1 GR_TG_CORR;
    float1 GR_TA_CORR;

    float1 GR_BETA_INV; // Inverse of the Bowen ratio
    float1 GR_CLOUD_COVER; // Cloud coverage: Used in simulation and shadows
};


RWStructuredBuffer<float1> gridSizeK;
RWStructuredBuffer<FStruct_GroundCellColumns_GPU> ground; //100
RWStructuredBuffer<FStruct_AirCellColumns_GPU> gridRslow; //x5600
RWStructuredBuffer<FStruct_AirCellColumns_GPU> gridInit; //x5600
RWStructuredBuffer<FStruct_AirCellColumns_GPU> Grid3D_curr; //x5600
RWStructuredBuffer<FStruct_AirCellColumns_GPU> Grid3D_next; //x5600
RWStructuredBuffer<FStruct_AirCellColumns_GPU> Grid3D_prev; //x5600

//RWStructuredBuffer<FStruct_AirCellColumns_GPU> test_outputA; //x5600
//RWStructuredBuffer<FStruct_AirCellColumns_GPU> test_outputB; //x5600
//RWStructuredBuffer<FStruct_AirCellColumns_GPU> test_outputC; //x5600